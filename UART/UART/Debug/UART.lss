
UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000048  00800100  00000270  000002e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000270  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000032c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000035c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  0000039c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009e4  00000000  00000000  000003d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000089a  00000000  00000000  00000db8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000398  00000000  00000000  00001652  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000064  00000000  00000000  000019ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000435  00000000  00000000  00001a50  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000183  00000000  00000000  00001e85  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00002008  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e7       	ldi	r30, 0x70	; 112
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a8 34       	cpi	r26, 0x48	; 72
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	4e d0       	rcall	.+156    	; 0x150 <main>
  b4:	db c0       	rjmp	.+438    	; 0x26c <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <putch>:

unsigned int DoReMi[8]={261,587,659,698,783,880,987,1046};

void putch(unsigned char data)
{
	while((UCSR0A & 0x20)==0);
  b8:	5d 9b       	sbis	0x0b, 5	; 11
  ba:	fe cf       	rjmp	.-4      	; 0xb8 <putch>
	UDR0=data;
  bc:	8c b9       	out	0x0c, r24	; 12
	UCSR0A |=0x20;
  be:	5d 9a       	sbi	0x0b, 5	; 11
  c0:	08 95       	ret

000000c2 <getch>:
}

unsigned char getch()
{
	unsigned char data;
	while((UCSR0A & 0x80)==0);
  c2:	5f 9b       	sbis	0x0b, 7	; 11
  c4:	fe cf       	rjmp	.-4      	; 0xc2 <getch>
	data=UDR0;
  c6:	8c b1       	in	r24, 0x0c	; 12
	UCSR0A |= 0x80;
  c8:	5f 9a       	sbi	0x0b, 7	; 11
	return data;
}
  ca:	08 95       	ret

000000cc <piano>:
void piano(unsigned char data)
{
	if(data=='1')
  cc:	81 33       	cpi	r24, 0x31	; 49
  ce:	19 f4       	brne	.+6      	; 0xd6 <piano+0xa>
	{
		ICR3 = 32;
  d0:	80 e2       	ldi	r24, 0x20	; 32
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	18 c0       	rjmp	.+48     	; 0x106 <piano+0x3a>
		TCCR3A = 0x40;
		_delay_ms(1000);
		TCCR3A=0x00;
	}
	if(data=='2')
  d6:	82 33       	cpi	r24, 0x32	; 50
  d8:	19 f4       	brne	.+6      	; 0xe0 <piano+0x14>
	{
		ICR3 = 65;
  da:	81 e4       	ldi	r24, 0x41	; 65
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	13 c0       	rjmp	.+38     	; 0x106 <piano+0x3a>
		TCCR3A = 0x40;
		_delay_ms(1000);
		TCCR3A=0x00;
	}
	if(data=='3')
  e0:	83 33       	cpi	r24, 0x33	; 51
  e2:	19 f4       	brne	.+6      	; 0xea <piano+0x1e>
	{
		ICR3 = 130;
  e4:	82 e8       	ldi	r24, 0x82	; 130
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	0e c0       	rjmp	.+28     	; 0x106 <piano+0x3a>
		TCCR3A = 0x40;
		_delay_ms(1000);
		TCCR3A=0x00;
	}
	if(data=='4')
  ea:	84 33       	cpi	r24, 0x34	; 52
  ec:	19 f4       	brne	.+6      	; 0xf4 <piano+0x28>
	{
		ICR3 = 261;
  ee:	85 e0       	ldi	r24, 0x05	; 5
  f0:	91 e0       	ldi	r25, 0x01	; 1
  f2:	09 c0       	rjmp	.+18     	; 0x106 <piano+0x3a>
		TCCR3A = 0x40;
		_delay_ms(1000);
		TCCR3A=0x00;
	}
	if(data=='5')
  f4:	85 33       	cpi	r24, 0x35	; 53
  f6:	19 f4       	brne	.+6      	; 0xfe <piano+0x32>
	{
		ICR3 = 523;
  f8:	8b e0       	ldi	r24, 0x0B	; 11
  fa:	92 e0       	ldi	r25, 0x02	; 2
  fc:	04 c0       	rjmp	.+8      	; 0x106 <piano+0x3a>
		TCCR3A = 0x40;
		_delay_ms(1000);
		TCCR3A=0x00;
	}
	if(data=='6')
  fe:	86 33       	cpi	r24, 0x36	; 54
 100:	39 f4       	brne	.+14     	; 0x110 <piano+0x44>
	{
		ICR3 = 1046;
 102:	86 e1       	ldi	r24, 0x16	; 22
 104:	94 e0       	ldi	r25, 0x04	; 4
 106:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 10a:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 10e:	11 c0       	rjmp	.+34     	; 0x132 <piano+0x66>
		TCCR3A = 0x40;
		_delay_ms(1000);
		TCCR3A=0x00;
	}
	if(data=='7')
 110:	87 33       	cpi	r24, 0x37	; 55
 112:	e9 f4       	brne	.+58     	; 0x14e <piano+0x82>
	{
		ICR3 = 7372800/DoReMi[6]/2;
 114:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__DATA_REGION_ORIGIN__+0xc>
 118:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__DATA_REGION_ORIGIN__+0xd>
 11c:	40 e0       	ldi	r20, 0x00	; 0
 11e:	50 e0       	ldi	r21, 0x00	; 0
 120:	60 e0       	ldi	r22, 0x00	; 0
 122:	70 e4       	ldi	r23, 0x40	; 64
 124:	88 e3       	ldi	r24, 0x38	; 56
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	63 d0       	rcall	.+198    	; 0x1f0 <__divmodsi4>
 12a:	30 93 81 00 	sts	0x0081, r19	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 12e:	20 93 80 00 	sts	0x0080, r18	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
		TCCR3A = 0x40;
 132:	80 e4       	ldi	r24, 0x40	; 64
 134:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 138:	2f ef       	ldi	r18, 0xFF	; 255
 13a:	8f e7       	ldi	r24, 0x7F	; 127
 13c:	96 e1       	ldi	r25, 0x16	; 22
 13e:	21 50       	subi	r18, 0x01	; 1
 140:	80 40       	sbci	r24, 0x00	; 0
 142:	90 40       	sbci	r25, 0x00	; 0
 144:	e1 f7       	brne	.-8      	; 0x13e <piano+0x72>
 146:	00 c0       	rjmp	.+0      	; 0x148 <piano+0x7c>
 148:	00 00       	nop
		_delay_ms(1000);
		TCCR3A=0x00;
 14a:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 14e:	08 95       	ret

00000150 <main>:
	}
	
}

int main()
{
 150:	cf 93       	push	r28
 152:	df 93       	push	r29
 154:	cd b7       	in	r28, 0x3d	; 61
 156:	de b7       	in	r29, 0x3e	; 62
 158:	e8 97       	sbiw	r28, 0x38	; 56
 15a:	0f b6       	in	r0, 0x3f	; 63
 15c:	f8 94       	cli
 15e:	de bf       	out	0x3e, r29	; 62
 160:	0f be       	out	0x3f, r0	; 63
 162:	cd bf       	out	0x3d, r28	; 61
	unsigned char text[]="\r\nWelcome! edgeiLAB\r\n USART 0 TEST PROGRAM. \r\n";
 164:	8f e2       	ldi	r24, 0x2F	; 47
 166:	e0 e1       	ldi	r30, 0x10	; 16
 168:	f1 e0       	ldi	r31, 0x01	; 1
 16a:	de 01       	movw	r26, r28
 16c:	11 96       	adiw	r26, 0x01	; 1
 16e:	01 90       	ld	r0, Z+
 170:	0d 92       	st	X+, r0
 172:	8a 95       	dec	r24
 174:	e1 f7       	brne	.-8      	; 0x16e <main+0x1e>
	unsigned char echo[] = "ECHO >> ";
 176:	89 e0       	ldi	r24, 0x09	; 9
 178:	ef e3       	ldi	r30, 0x3F	; 63
 17a:	f1 e0       	ldi	r31, 0x01	; 1
 17c:	de 01       	movw	r26, r28
 17e:	d0 96       	adiw	r26, 0x30	; 48
 180:	01 90       	ld	r0, Z+
 182:	0d 92       	st	X+, r0
 184:	8a 95       	dec	r24
 186:	e1 f7       	brne	.-8      	; 0x180 <main+0x30>
	unsigned char i = 0;
	unsigned char data=0;
	
	DDRE = 0xfe;
 188:	8e ef       	ldi	r24, 0xFE	; 254
 18a:	82 b9       	out	0x02, r24	; 2
	
	UCSR0A=0x00;
 18c:	1b b8       	out	0x0b, r1	; 11
	UCSR0B=0x18;
 18e:	88 e1       	ldi	r24, 0x18	; 24
 190:	8a b9       	out	0x0a, r24	; 10
	UCSR0C=0x06;
 192:	86 e0       	ldi	r24, 0x06	; 6
 194:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
	
	UBRR0H=0x00;
 198:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L=0x03;
 19c:	83 e0       	ldi	r24, 0x03	; 3
 19e:	89 b9       	out	0x09, r24	; 9
	
	TCCR3A = 0x00;
 1a0:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
	TCCR3B = 0x19;
 1a4:	89 e1       	ldi	r24, 0x19	; 25
 1a6:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	TCCR3C = 0x00;
 1aa:	10 92 8c 00 	sts	0x008C, r1	; 0x80008c <__TEXT_REGION_LENGTH__+0x7e008c>
	TCNT3 =0x00;
 1ae:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1b2:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>

int main()
{
	unsigned char text[]="\r\nWelcome! edgeiLAB\r\n USART 0 TEST PROGRAM. \r\n";
	unsigned char echo[] = "ECHO >> ";
	unsigned char i = 0;
 1b6:	10 e0       	ldi	r17, 0x00	; 0
	TCCR3A = 0x00;
	TCCR3B = 0x19;
	TCCR3C = 0x00;
	TCNT3 =0x00;
	
	while(text[i]!='\0')
 1b8:	e1 e0       	ldi	r30, 0x01	; 1
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	ec 0f       	add	r30, r28
 1be:	fd 1f       	adc	r31, r29
 1c0:	e1 0f       	add	r30, r17
 1c2:	f1 1d       	adc	r31, r1
 1c4:	80 81       	ld	r24, Z
 1c6:	88 23       	and	r24, r24
 1c8:	19 f0       	breq	.+6      	; 0x1d0 <main+0x80>
	{
		putch(text[i++]);
 1ca:	1f 5f       	subi	r17, 0xFF	; 255
 1cc:	75 df       	rcall	.-278    	; 0xb8 <putch>
 1ce:	f4 cf       	rjmp	.-24     	; 0x1b8 <main+0x68>
 1d0:	10 e0       	ldi	r17, 0x00	; 0
	}
	
	i=0;
	while(echo[i]!='\0')
 1d2:	e0 e3       	ldi	r30, 0x30	; 48
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
 1d6:	ec 0f       	add	r30, r28
 1d8:	fd 1f       	adc	r31, r29
 1da:	e1 0f       	add	r30, r17
 1dc:	f1 1d       	adc	r31, r1
 1de:	80 81       	ld	r24, Z
 1e0:	88 23       	and	r24, r24
 1e2:	19 f0       	breq	.+6      	; 0x1ea <main+0x9a>
	{
		putch(echo[i++]);
 1e4:	1f 5f       	subi	r17, 0xFF	; 255
 1e6:	68 df       	rcall	.-304    	; 0xb8 <putch>
	}
	while(1)
	{
		//putch(getch());
		
		data=getch();
 1e8:	f4 cf       	rjmp	.-24     	; 0x1d2 <main+0x82>
 1ea:	6b df       	rcall	.-298    	; 0xc2 <getch>
		piano(data);
 1ec:	6f df       	rcall	.-290    	; 0xcc <piano>
 1ee:	fd cf       	rjmp	.-6      	; 0x1ea <main+0x9a>

000001f0 <__divmodsi4>:
 1f0:	05 2e       	mov	r0, r21
 1f2:	97 fb       	bst	r25, 7
 1f4:	16 f4       	brtc	.+4      	; 0x1fa <__divmodsi4+0xa>
 1f6:	00 94       	com	r0
 1f8:	0f d0       	rcall	.+30     	; 0x218 <__negsi2>
 1fa:	57 fd       	sbrc	r21, 7
 1fc:	05 d0       	rcall	.+10     	; 0x208 <__divmodsi4_neg2>
 1fe:	14 d0       	rcall	.+40     	; 0x228 <__udivmodsi4>
 200:	07 fc       	sbrc	r0, 7
 202:	02 d0       	rcall	.+4      	; 0x208 <__divmodsi4_neg2>
 204:	46 f4       	brtc	.+16     	; 0x216 <__divmodsi4_exit>
 206:	08 c0       	rjmp	.+16     	; 0x218 <__negsi2>

00000208 <__divmodsi4_neg2>:
 208:	50 95       	com	r21
 20a:	40 95       	com	r20
 20c:	30 95       	com	r19
 20e:	21 95       	neg	r18
 210:	3f 4f       	sbci	r19, 0xFF	; 255
 212:	4f 4f       	sbci	r20, 0xFF	; 255
 214:	5f 4f       	sbci	r21, 0xFF	; 255

00000216 <__divmodsi4_exit>:
 216:	08 95       	ret

00000218 <__negsi2>:
 218:	90 95       	com	r25
 21a:	80 95       	com	r24
 21c:	70 95       	com	r23
 21e:	61 95       	neg	r22
 220:	7f 4f       	sbci	r23, 0xFF	; 255
 222:	8f 4f       	sbci	r24, 0xFF	; 255
 224:	9f 4f       	sbci	r25, 0xFF	; 255
 226:	08 95       	ret

00000228 <__udivmodsi4>:
 228:	a1 e2       	ldi	r26, 0x21	; 33
 22a:	1a 2e       	mov	r1, r26
 22c:	aa 1b       	sub	r26, r26
 22e:	bb 1b       	sub	r27, r27
 230:	fd 01       	movw	r30, r26
 232:	0d c0       	rjmp	.+26     	; 0x24e <__udivmodsi4_ep>

00000234 <__udivmodsi4_loop>:
 234:	aa 1f       	adc	r26, r26
 236:	bb 1f       	adc	r27, r27
 238:	ee 1f       	adc	r30, r30
 23a:	ff 1f       	adc	r31, r31
 23c:	a2 17       	cp	r26, r18
 23e:	b3 07       	cpc	r27, r19
 240:	e4 07       	cpc	r30, r20
 242:	f5 07       	cpc	r31, r21
 244:	20 f0       	brcs	.+8      	; 0x24e <__udivmodsi4_ep>
 246:	a2 1b       	sub	r26, r18
 248:	b3 0b       	sbc	r27, r19
 24a:	e4 0b       	sbc	r30, r20
 24c:	f5 0b       	sbc	r31, r21

0000024e <__udivmodsi4_ep>:
 24e:	66 1f       	adc	r22, r22
 250:	77 1f       	adc	r23, r23
 252:	88 1f       	adc	r24, r24
 254:	99 1f       	adc	r25, r25
 256:	1a 94       	dec	r1
 258:	69 f7       	brne	.-38     	; 0x234 <__udivmodsi4_loop>
 25a:	60 95       	com	r22
 25c:	70 95       	com	r23
 25e:	80 95       	com	r24
 260:	90 95       	com	r25
 262:	9b 01       	movw	r18, r22
 264:	ac 01       	movw	r20, r24
 266:	bd 01       	movw	r22, r26
 268:	cf 01       	movw	r24, r30
 26a:	08 95       	ret

0000026c <_exit>:
 26c:	f8 94       	cli

0000026e <__stop_program>:
 26e:	ff cf       	rjmp	.-2      	; 0x26e <__stop_program>
